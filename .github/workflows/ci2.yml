name: Build

on:
   pull_request:

concurrency:
  group: ci2-${{ github.head_ref }}
  cancel-in-progress: true

jobs:

  Build-and-test:
    name: Run DAOS/NLT tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distro: [ubuntu.20.04]
      DEPS_JOBS: 10
      COMPILER: clang
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    # https://github.com/marketplace/actions/docker-layer-caching
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: docker-${{ matrix.distro }}-${{ hashFiles('site_scons', 'utils/docker', 'utils/build.config', 'SConstruct', '.github', '.dockerignore') }}-{hash}
        restore-keys: docker-${{ matrix.distro }}-${{ hashFiles('site_scons', 'utils/docker', 'utils/build.config', 'SConstruct', '.github', '.dockerignore') }}-
        skip-save: true
    - name: Update dependencies in image.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_BUILD=no
                          --build-arg DEPS_JOBS
                          --tag build-image
    - name: Build and Test
      run: ./utils/run_in_ga_wrapper.sh
    - name: Dmesg
      # Always save dmesg, to be able to check for DAOS-7764 or other critical issues.
      if: always()
      run: sudo dmesg
    - name: Publish NLT test results
      if: always()
      uses: EnricoMi/publish-unit-test-result-action@v1.17
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: nlt-junit.xml
        comment_mode: off
        fail_on: nothing

  Build:
    name: Build DAOS
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        # Run this on distros where we don't run the ci1 Workflow.
        distro: [ubuntu.20.04, centos.8, leap.15]
        compiler: [clang, gcc]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    # https://github.com/marketplace/actions/docker-layer-caching
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: docker-${{ matrix.distro }}-${{ hashFiles('site_scons', 'utils/docker', 'utils/build.config', 'SConstruct', '.github', '.dockerignore') }}-{hash}
        restore-keys: docker-${{ matrix.distro }}-${{ hashFiles('site_scons', 'utils/docker', 'utils/build.config', 'SConstruct', '.github', '.dockerignore') }}-
        skip-save: true
    - name: Update dependencies in image.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_BUILD=no
                          --build-arg DEPS_JOBS=10
    - name: Build in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_JAVA_BUILD=no
                          --build-arg DEPS_JOBS=10
                          --build-arg COMPILER=${{ matrix.compiler }}
    - name: Build Java in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DEPS_JOBS=10
                          --build-arg COMPILER=${{ matrix.compiler }}
    - name: Build debug in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_JAVA_BUILD=no
                          --build-arg DEPS_JOBS=10
                          --build-arg DAOS_BUILD_TYPE=debug
                          --build-arg COMPILER=${{ matrix.compiler }}
    - name: Build devel in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_JAVA_BUILD=no
                          --build-arg DEPS_JOBS=10
                          --build-arg DAOS_BUILD_TYPE=dev
                          --build-arg COMPILER=${{ matrix.compiler }}
