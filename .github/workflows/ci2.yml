name: DAOS test Build.

on:
   push:
     branches:
       - master
       - 'release/*'
   pull_request:

jobs:

  # Build a base Docker image, and save it with a key based on the
  # hash.
  # If the source hasn't changed then this will be a cache-read, followed
  # by a cache-write which will fail as the cache exists, but the read will
  # put it to the front of the LRU queue.
  # If the source has changed then the cache-read will fail, a new build will
  # be performed and saved to the cache with a new key.
  Prepare:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: satackey/action-docker-layer-caching@v0.0.11
      with:
        key: docker-${{ hashFiles('utils/sl', 'utils/docker', 'utils/build.config', 'SConstruct', '.github') }}-{hash}
    - name: Set UID
      run: echo UID=`id -u` >> $GITHUB_ENV
    - name: Prepare base image in Docker
      run: docker build . -f utils/docker/Dockerfile.ubuntu.20.04
                          --build-arg DAOS_DEPS_BUILD=no --build-arg UID
                          --build-arg DEPS_JOB=10
    - name: Build dependencies in Docker
      run: docker build . -f utils/docker/Dockerfile.ubuntu.20.04
                          --build-arg DAOS_BUILD=no
                          --build-arg UID
                          --build-arg DEPS_JOB=10
    - name: Prune images not required for build.
      run: docker images -a --filter label=DAOS=true --quiet | xargs docker rmi --no-prune

  Build:
    name: Run DAOS tests
    needs: Prepare
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro: [ubuntu.20.04]
        compiler: [clang]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set UID
      run: echo UID=`id -u` >> $GITHUB_ENV
    # https://github.com/marketplace/actions/docker-layer-caching
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: docker-${{ hashFiles('utils/sl', 'utils/docker', 'utils/build.config', 'SConstruct', '.github') }}-{hash}
        restore-keys: docker-
        skip-save: true
    - name: Update dependencies in image.
      run: docker build . -f utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_BUILD=no
                          --build-arg DEPS_JOB=10
                          --build-arg UID -t build-image
    - name: Run inside
      run: docker run --mount type=tmpfs,destination=/mnt/daos,tmpfs-mode=1777 build-image ./daos/utils/run_in_ga.sh
