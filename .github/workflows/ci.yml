name: Workflow

on:
   push:
     branches:
       - master
       - 'release/*'
   pull_request:

jobs:

  Build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro: [ubuntu.20.04]
        compiler: [gcc]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build ${{ matrix.distro }} Docker image with ${{ matrix.compiler }}
      run: docker build . -f utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg COMPILER=${{ matrix.compiler }}
                          -t ${{ matrix.distro }}/${{ matrix.compiler }}/daos:${{ github.sha }}

  # Prepare docker images containing base software, plus deps.
  Prepare:
    name: Prepare images
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro: [ubuntu.20.04]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set cache key
      run: echo "CACHE_KEY=$(date +%j)" >> $GITHUB_ENV
    - name: Set UID
      run: echo UID=`id -u` >> $GITHUB_ENV
    # https://github.com/marketplace/actions/docker-layer-caching
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: dos-${{ env.CACHE_KEY }}-${{ matrix.distro }}-{hash}
        restore-keys: dos-${{ env.CACHE_KEY }}-${{ matrix.distro }}-
    - name: Build base Docker image
      run: docker build . -f utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_DEPS_BUILD=no --build-arg UID
    - name: Build deps in Docker image
      run: docker build . -f utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_BUILD=no --build-arg DEPS_JOBS=10
                          --build-arg UID
  Build2:
    name: Run the build
    #needs: Prepare
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro: [ubuntu.20.04]
        compiler: [clang]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set cache key
      run: echo "CACHE_KEY=$(date +%j)" >> $GITHUB_ENV
    - name: Set UID
      run: echo UID=`id -u` >> $GITHUB_ENV
    # https://github.com/marketplace/actions/docker-layer-caching
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: dos-${{ env.CACHE_KEY }}-${{ matrix.distro }}-{hash}
        restore-keys: dos-${{ env.CACHE_KEY }}-${{ matrix.distro }}-
        skip-save: true
    - name: re-build deps image
      run: docker build . -f utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_BUILD=no --build-arg DEPS_JOBS=10
                          --build-arg UID
    - name: Check env.
      run: env | sort
    - name: Build daos
      run: docker build . -f utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg COMPILER=${{ matrix.compiler }}
                          --build-arg DAOS_JAVA_BUILD=no --build-arg DEPS_JOBS=10
                          --build-arg UID
                          -t build-image
    - name: check server
      run: docker run build-image ldd /opt/daos/bin/daos_engine
      #    - name: Run Unit Tests
      #run: docker run --name build-ut --tmpfs /mnt/daos build-image ./utils/run_test.sh
      #- name: mkdir
      #run: mkdir test_results/
      # - name: Copy results
      # run: docker cp build-ut:/home/daos/test_results/ ./
      #- name: find
      # run: find test_results/
      #- name: grep
      # run: grep . test_results/*
      #    - name: Publish Unit Test Results
      #uses: EnricoMi/publish-unit-test-result-action@v1.7
      #with:
      #  github_token: ${{ secrets.GITHUB_TOKEN }}
      #  files: test_results/*.xml
    - name: Build but faster
      run: docker run --tmpfs /mnt/daos build-image id
    - name: Build but faster
      run: docker run --mount type=tmpfs,destination=/mnt/daos,tmpfs-mode=1777 build-image ls -ld /mnt/daos
    - name: Build but faster
      run: docker run --mount type=tmpfs,destination=/mnt/daos,tmpfs-mode=1777 build-image scons BUILD_ROOT=/mnt/daos PREFIX=/opt/daos --jobs 10
    - name: Run NLT Test
      if: always()
      run: docker run --mount type=tmpfs,destination=/mnt/daos,tmpfs-mode=1777 build-image ./utils/node_local_test.py --no-root kv
    - name: Copy results
      run: docker cp build-ut:/home/daos/*.json ./
    - name: grep
      if: always()
      run: grep . *.json
